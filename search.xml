<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客搭建教程</title>
      <link href="posts/116b0f3c/"/>
      <url>posts/116b0f3c/</url>
      
        <content type="html"><![CDATA[<h1 id="一安装与配置"><a class="markdownIt-Anchor" href="#一安装与配置"></a> 一，安装与配置</h1><p>1，右击选择<strong>Git Bash</strong>，然后输入初始化 Hexo 博客，git就会自动帮你下载hexo框架</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init hexo</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/02/21/DawpShjGe2HxmMR.png" alt="image-20210220221202161" /></p><p>2，这个时候就会自动新建一个名为 hexo 的文件夹，并且 hexo 已经在该文件夹内完成初始化</p><p><img src="https://i.loli.net/2021/02/21/JYKaM9gy4wODjTS.png" alt="image-20210220221021743" /></p><p>3，hexo的基本命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="comment">#清除生成的博客静态文件</span></span><br><span class="line">$ hexo g <span class="comment">#生成博客静态文件=命令hexo generate</span></span><br><span class="line">$ hexo s <span class="comment">#启动博客的本地预览=命令hexo server</span></span><br><span class="line">$ hexo d <span class="comment">#推送博客到远程仓库=命令hexo deploy</span></span><br><span class="line">$ hexo new page xxx <span class="comment">#新建名为&quot;xxx&quot;的页面</span></span><br><span class="line">$ hexo new xxx <span class="comment">#新建名为&quot;xxx&quot;的文章</span></span><br><span class="line">$ hexo d -g <span class="comment">#生成静态博客并推送到Git远程仓库</span></span><br><span class="line">$ hexo s -g <span class="comment">#生成静态博客并启动本地预览</span></span><br></pre></td></tr></table></figure><p>4，直接输入（注意：不能在原来那个窗口输入，需要进入到hexo文件夹中打开git bash窗口输入），在执行hexo g的时候就会给我们生成一个public文件夹，这个文件夹就是我们之后部署到Github或者Coding等平台的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install <span class="comment">##需要安装 hexo 必须的依赖</span></span><br><span class="line">$ hexo clean &amp;&amp;  hexo g &amp;&amp; hexo s </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/02/21/DSlLXpujeHa9MEV.png" alt="image-20210220221845325" /></p><p>5，执行完之后，在浏览器输入：localhost:4000，就会显示如下：</p><p><img src="https://i.loli.net/2021/02/21/juAIM6tQTU9a2SL.png" alt="image-20210220222218285" /></p><p>6，下载主题，随便选一种下载：</p><p>Next主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b dev https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line">$ npm i hexo-renderer-swig <span class="comment">##hexo在5.0之后把swig给删除了需要自己手动安装</span></span><br></pre></td></tr></table></figure><p>或者butterfly主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line">$ npm install hexo-renderer-pug hexo-renderer-stylus --save <span class="comment">##需要下载pug 以及 stylus 的渲染器</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/02/21/ZpGN637oiCzHlvR.png" alt="image-20210220224350595" /></p><p>7，然后打开hexo目录下的**_config.yml**配置文件，找到第101行将theme参数修改为你所应用的主题，我这里使用next主题，修改之后保存。</p><p><em><strong>在 YAML 语法中，冒号后面必须要有一个空格。</strong></em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: next ##landscape</span><br></pre></td></tr></table></figure><p>8，再次执行，并在浏览器输入：localhost:4000，就可以发现和之前不一样了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp;  hexo g &amp;&amp; hexo s </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/02/21/ElBUkVRyxYwN7J6.png" alt="image-20210220232311307" /></p><p>9，接下来就可以写文章了，在命令行输入，就会在hexo/source/_posts/目录下生成.md文件，在打开该文件就可以进行编写文章了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new  &quot;文件名&quot; ##创建文章</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/02/21/pziwtD4hZcsYUxf.png" alt="image-20210220232634181" /></p><p>10，编写文章，然后重新执行启动命令，打开网页</p><p><img src="https://i.loli.net/2021/02/21/nmMwiXyGY6CoINH.png" alt="image-20210220233739834" /></p><h1 id="二部署"><a class="markdownIt-Anchor" href="#二部署"></a> 二，部署</h1><p>1，如果没有账号，请点此前往 <a href="https://github.com/">GitHub</a> 注册一个 GitHub 账号。</p><p>2，新建一个公开仓库，仓库名格式为 <code>your_username.github.io</code> 例如你的 GitHub 用户名是 <code>Jrebes</code> ，那么你的仓库地址名称就应该是 <code>Jrebes.github.io</code></p><p><img src="https://i.loli.net/2021/02/21/mJxv2QsUeXDbwio.png" alt="image-20210220235647637" /></p><p><img src="https://i.loli.net/2021/02/21/Xnc4jPg6JorlTFd.png" alt="image-20210221000241405" /></p><p>3，复制该仓库的 HTTPS/SSH 地址，一般格式为 <code>https://github.com/your_username/your_reponame.git</code> 在下一步会用到。</p><p><img src="https://i.loli.net/2021/02/21/JpcaWQmSHfyOB9h.png" alt="image-20210221000425766" /></p><p>4，分别输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;username&quot;</span> <span class="comment"># username是你的Github用户名，注意大小写保持一致</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;your email address&quot;</span> <span class="comment"># your email address填写你的Github注册用的邮箱</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;your email address&quot;</span>  <span class="comment"># 生成SSH公钥，your email address同上填</span></span><br></pre></td></tr></table></figure><p>5，完成上面步骤后默认生成的密钥在 C:\Users\用户名.ssh\ 目录下，以文本编辑器打开 id_rsa.pub 文件，复制里面的所有内容，在Github中配置</p><p><img src="https://i.loli.net/2021/02/21/5XEeQOB4HGkcLSV.png" alt="image-20210221001317486" /></p><p><img src="https://i.loli.net/2021/02/21/5XEeQOB4HGkcLSV.png" alt="image-20210221001252546" /></p><p>6，打开 Git Bash，输入下面命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/02/21/bmjsIAtlPYUOu3G.png" alt="image-20210221003103739" /></p><p>7，打开 hexo 目录下的_config.yml 文件，修改最后一行的 deploy 配置信息：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://github.com/username/username.github.io.git</span> <span class="comment"># Git仓库地址，username是Github用户名</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment"># 部署到仓库的master(主)分支</span></span><br></pre></td></tr></table></figure><p>8，执行命令，第一次push的时候需要你输入你的Github的用户名和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save <span class="comment">##安装hexo-deployer-git插件</span></span><br><span class="line">$ hexo clean &amp;&amp;  hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>9，本来是需要自动去开启Github Page服务的，但是好像最近更新之后就默认自动开启，所以在浏览器输入你的博客网站就可以了，博客网站如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://username.github.io/  ##username是Github用户名</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/02/21/wHsC5rfSPzMLKov.png" alt="image-20210221014232158" /></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>集群搭建</title>
      <link href="posts/56e0c1a5/"/>
      <url>posts/56e0c1a5/</url>
      
        <content type="html"><![CDATA[<h1 id="集群搭建"><a class="markdownIt-Anchor" href="#集群搭建"></a> 集群搭建</h1><h1 id="集群搭建-2"><a class="markdownIt-Anchor" href="#集群搭建-2"></a> <strong>集群搭建：</strong></h1><h3 id="1创建atguigu用户"><a class="markdownIt-Anchor" href="#1创建atguigu用户"></a> <strong>1，创建atguigu用户</strong></h3><p><code>useradd atguigu</code></p><p><code>passwd atguigu</code></p><h3 id="2设置hostname"><a class="markdownIt-Anchor" href="#2设置hostname"></a> <strong>2，设置hostname</strong></h3><p><code>hostnamectl --static set-hostname hadoop102</code></p><h3 id="3关闭防火墙"><a class="markdownIt-Anchor" href="#3关闭防火墙"></a> <strong>3，关闭防火墙</strong></h3><p><code>systemctl stop firewalld</code></p><p><code>systemctl disable firewalld</code></p><h3 id="4设置ip"><a class="markdownIt-Anchor" href="#4设置ip"></a> <strong>4，设置ip</strong></h3><p><code>vim    /etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p>修改：</p><p><code>BOOTPROTO=static</code></p><p><code>ONBOOT=yes</code></p><p>添加</p><p><code>IPADDR=192.168.1.102</code></p><p><code>GATEWAY=192.168.1.2</code></p><p><code>DNS1=192.168.1.2</code></p><p><code>DNS2=114.114.114.114</code></p><h3 id="5设置映射"><a class="markdownIt-Anchor" href="#5设置映射"></a> <strong>5，设置映射</strong></h3><p><code>vim /etc/hosts</code></p><p><code>192.168.1.102 hadoop102</code></p><p><code>192.168.1.103 hadoop103</code></p><p><code>192.168.1.104 hadoop104</code></p><h3 id="6创建文件夹并修改权限"><a class="markdownIt-Anchor" href="#6创建文件夹并修改权限"></a> <strong>6，创建文件夹，并修改权限</strong></h3><p><code>mkdir /opt/software</code></p><p><code>mkdir /opt/module</code></p><p><code>chown atguigu:atguigu /opt/software</code></p><p><code>chown atguigu:atguigu /opt/module</code></p><h3 id="7设置sudo权限为免密"><a class="markdownIt-Anchor" href="#7设置sudo权限为免密"></a> <strong>7，设置sudo权限为免密：</strong></h3><p><code>atguigu ALL=(ALL) NOPASSWD: ALL</code></p><h3 id="-复制虚拟机-"><a class="markdownIt-Anchor" href="#-复制虚拟机-"></a> -------复制虚拟机-------</h3><h3 id="8修改ip以及hostname"><a class="markdownIt-Anchor" href="#8修改ip以及hostname"></a> <strong>8，修改ip以及hostname</strong></h3><p>修改ip：</p><p><code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p><code>IPADDR=192.168.1.103</code></p><p><code>IPADDR=192.168.1.104</code></p><p>修改hostname：</p><p><code>hostnamectl --static set-hostname hadoop103</code></p><p><code>hostnamectl --static set-hostname hadoop104</code></p><h3 id="9所有root以及atguigu都要设置ssh免密"><a class="markdownIt-Anchor" href="#9所有root以及atguigu都要设置ssh免密"></a> 9，<strong>所有root以及atguigu都要设置ssh免密</strong></h3><p><code>ssh-keygen</code></p><p>root用户:</p><p><code>ssh-copy-id root@hadoop102</code></p><p>atguigu用户：</p><p><code>ssh-copy-id atguigu@hadoop102</code></p><h3 id="10安装vim"><a class="markdownIt-Anchor" href="#10安装vim"></a> <strong>10，安装vim</strong></h3><h3 id="11设置命令行界面设置为3"><a class="markdownIt-Anchor" href="#11设置命令行界面设置为3"></a> <strong>11，设置命令行界面（设置为3）</strong></h3><p><code>systemctl get-default         //获取当前的启动项</code></p><p><code>systemctl set-default multi-user.target</code></p><h3 id="12设置分发脚本"><a class="markdownIt-Anchor" href="#12设置分发脚本"></a> <strong>12，设置分发脚本</strong></h3><p>12.1，安装rsync</p><p><code>sudo yum install -y rsync</code><br />12.2，xsync脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;bin&#x2F;bash</span><br><span class="line">#1、判断是否传入待同步的文件&#x2F;目录</span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">echo &quot;必须传入一个文件&#x2F;目录&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">#2、遍历待同步的多个文件&#x2F;目录</span><br><span class="line">for fileOrDir in $@</span><br><span class="line">do</span><br><span class="line">#3、判断当前待同步的文件&#x2F;目录是否存在</span><br><span class="line">#-d: 判断是否为目录</span><br><span class="line">#-f: 判断是否为文件</span><br><span class="line">#-e: 判断是否存在</span><br><span class="line">if [ -e $fileOrDir ]</span><br><span class="line">then</span><br><span class="line">#4、获取待同步的文件&#x2F;目录的父目录、文件名&#x2F;最后一个目录名</span><br><span class="line">pdir&#x3D;$(cd $(dirname $fileOrDir);pwd)</span><br><span class="line">fname&#x3D;$(basename $fileOrDir)</span><br><span class="line">for host in hadoop102 hadoop103 hadoop104</span><br><span class="line">do</span><br><span class="line">echo &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;$host&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;</span><br><span class="line">#5、在其他机器上创建父目录</span><br><span class="line">ssh $host &quot;mkdir -p $pdir&quot;</span><br><span class="line">#6、同步文件&#x2F;目录</span><br><span class="line">rsync -av $pdir&#x2F;$fname $host:$pdir</span><br><span class="line">done</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"># cd &#x2F;opt&#x2F;module&#x2F;xx</span><br><span class="line">#xsync a.txt &#x2F;opt&#x2F;module&#x2F;xx&#x2F;b.txt</span><br></pre></td></tr></table></figure><p>-av 打印进度</p><p><strong>12.3，在home家目录下创建一个bin目录并编写脚本（平时用于分发atguigu账号下的文件，如：module或者software文件夹下的）</strong></p><p><code>cd ~</code></p><p><code>mkdir bin</code></p><p><code>vim xsync</code></p><p><code>chmod +x xsync</code><br /><strong>12.4，将文件复制一份到root用户的/bin目录下（平时用于分发root账号下的文件，如：/etc/profile.d/my_env.sh）</strong></p><p><code>sudo cp /home/atguigu/bin/xsync /bin/</code></p><h3 id="13安装lrzsz用于传输文件"><a class="markdownIt-Anchor" href="#13安装lrzsz用于传输文件"></a> <strong>13，安装lrzsz，用于传输文件</strong></h3><p><code>sudo yum install lrzsz</code><br /><strong>使用rz命令上传文件，sz 文件名 命令下载文件</strong></p><h1 id="安装jdk"><a class="markdownIt-Anchor" href="#安装jdk"></a> <strong>安装JDK</strong></h1><h3 id="1检查linux中是否存在jdk如果存在就将其移除"><a class="markdownIt-Anchor" href="#1检查linux中是否存在jdk如果存在就将其移除"></a> <strong>1，检查Linux中是否存在jdk，如果存在就将其移除</strong></h3><p><code>sudo rpm -qa | grep -i java | xargs -n1sudo rpm -e --nodeps</code></p><h3 id="2将文件上传至software文件夹并解压至module文件夹并改名为java"><a class="markdownIt-Anchor" href="#2将文件上传至software文件夹并解压至module文件夹并改名为java"></a> <strong>2，将文件上传至software文件夹，并解压至module文件夹，并改名为java</strong></h3><p><code>tar -zxvf /opt/software/jdk-8u212-linux-x64.tar.gz  /opt/module/</code></p><p><code>mv /opt/module/jdk1.8.0_212 java</code></p><h3 id="3设置环境变量"><a class="markdownIt-Anchor" href="#3设置环境变量"></a> <strong>3，设置环境变量</strong></h3><p><code>export JAVA_HOME=/opt/module/java</code></p><p><code>export PATH=$PATH:$JAVA_HOME/bin</code></p><h3 id="4分发java文件"><a class="markdownIt-Anchor" href="#4分发java文件"></a> <strong>4，分发java文件</strong></h3><p><code>xsync /opt/module/java/</code></p><h3 id="5分发全局配置文件"><a class="markdownIt-Anchor" href="#5分发全局配置文件"></a> <strong>5，分发全局配置文件</strong></h3><p><code>sudo xsync /etc/profile.d/my_env.sh</code></p><p>注意：source 一下</p><p><code>source /etc/profile.d/my_env.sh</code></p><p>注意：不要在root用户连接的情况下，使用sudo去连接atguigu用户然后再进行操作atguigu这个用户</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
